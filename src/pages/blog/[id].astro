---
import { getCollection, render } from 'astro:content'
import readingTime from 'reading-time'

import ContentWrapper from '@/components/ContentWrapper.astro'
import BlogLayout from '@/layouts/BlogLayout'
import client from '@/lib/client'

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog')

  return Promise.all(
    blogEntries.map(async ({ data, ...rest }) => {
      const getLastUpdatedTime = client.api.github['last-updated-file']
      const { latestCommitUrl, lastUpdatedTime } = await getLastUpdatedTime
        .$get({ query: { path: `blog/${rest.id}.mdx` } })
        .then((res) => res.json())

      const entry = {
        ...rest,
        data: {
          ...data,
          ...(rest.body && { readingTime: readingTime(rest.body).minutes }),
          updatedDate: new Date(lastUpdatedTime),
          latestCommitUrl
        }
      }

      return {
        params: { id: entry.id },
        props: { entry }
      }
    })
  )
}

const { entry } = Astro.props
const { Content, headings } = await render(entry)
---

<BlogLayout headings={headings} {...entry}>
  <ContentWrapper content={Content} />
</BlogLayout>
