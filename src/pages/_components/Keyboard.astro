---
import { SOCIAL_MEDIA_DATA } from '@/components/socialMediaData'

interface Props {
  class?: string
}

const { class: className } = Astro.props
---

<!-- keyboard source: https://codepen.io/HaydnComley/pen/yLdpLbJ -->
<div class:list={['flex items-start text-center max-xs:flex-col', className]}>
  <div class='board'>
    {
      SOCIAL_MEDIA_DATA.map(({ name, href, icon: Icon }) => (
        <a class='key-position' target='_blank' {...{ href }}>
          <button aria-label={name} class='key' data-key={name}>
            <Icon />
          </button>
        </a>
      ))
    }
  </div>
  <div class='key-position flex items-center justify-center'>
    <a
      id='cta-hero-btn'
      href='#bento'
      data-block='center'
      class='key call-to-action peer'
    >
      <p class='call-to-action-content text-white'>Explore more</p>
    </a>
  </div>
</div>

<style>
  :root {
    --background-2: theme(colors.zinc.950);
    --background-3: theme(colors.shark.950);
    --contrast: #fff;
    --size: 5rem; /* keycap size */
  }

  svg {
    width: 2.25rem;
    height: 2.25rem;
  }

  @media (max-width: 640px) {
    :root {
      --size: 3rem;
    }

    svg {
      width: 1.5rem;
      height: 1.5rem;
    }
  }

  /* adjust value inside rotateY to adjust the direction of each keycap */
  .board {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: calc(var(--size) * 0.02);
  }

  .key.call-to-action {
    width: 160px;
    font-size: 14px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05rem;
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      'Liberation Mono', 'Courier New', monospace;
  }

  .call-to-action-content::after {
    position: absolute;
    content: '';
    width: 0;
    left: 0;
    top: 50%;
    margin: 10px 15%;
    background: #fff;
    height: 1.5px;
    transition: 0.3s ease-out;
  }

  .key.call-to-action:hover .call-to-action-content::after {
    width: 70%;
  }

  .key-position {
    transform: rotateZ(0turn) rotateY(0.05turn) rotateX(-0.1turn);
  }

  .key {
    position: relative;
    width: var(--size);
    height: var(--size);
    font-size: calc(var(--size) / 2);
    border: 0.1rem solid var(--background-3);
    border-radius: calc(var(--size) * 0.2);
    background: var(--background-2);
    color: var;
    box-shadow:
      0.15rem 0.15rem 0 0 var(--background-3),
      0.3rem 0.3rem 0 0 var(--background-3),
      0.45rem 0.45rem 0 0 var(--background-3),
      0.6rem 0.6rem 0 0 var(--background-3);
    transition: 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .key:hover {
    cursor: pointer;
    transform: translateX(0.3rem) translateY(0.3rem);
    box-shadow:
      0.15rem 0.15rem 0 0 var(--background-3),
      0.3rem 0.3rem 0 0 var(--background-3),
      0.45rem 0.45rem 0 0 var(--background-3),
      0.5rem 0.5rem 0 0 var(--background-3);
  }

  .key:active,
  .key.isDown {
    cursor: grabbing;
    transform: translateX(0.8rem) translateY(0.8rem);
    box-shadow:
      0.1rem 0.1rem 0 0 var(--background-3),
      0.1rem 0.1rem 0 0 var(--background-3),
      0.2rem 0.2rem 0 0 var(--background-3),
      0.2rem 0.2rem 0 0 var(--background-3);
    filter: blur(0.02rem);
  }

  /* tooltip source: https://codepen.io/cbracco/pen/nXEQLw */
  /* Add this attribute to the element that needs a tooltip */
  [data-tooltip] {
    position: relative;
    z-index: 2;
    cursor: pointer;
  }

  /* Hide the tooltip content by default */
  [data-tooltip]:before,
  [data-tooltip]:after {
    visibility: hidden;
    -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=0)';
    filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=0);
    opacity: 0;
    pointer-events: none;
  }

  /* Position tooltip above the element */
  [data-tooltip]:before {
    position: absolute;
    bottom: 100%;
    transform: translateX(-50%);
    margin-bottom: 5px;
    padding: 6px 12px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-radius: 3px;
    background-color: #000;
    background-color: hsl(0, 0%, 20%);
    color: #fff;
    content: attr(data-tooltip);
    text-align: center;
    font-size: 14px;
    line-height: 1.2;
    white-space: nowrap;
    z-index: 2;
  }

  /* Triangle hack to make tooltip look like a speech bubble */
  [data-tooltip]:after {
    position: absolute;
    bottom: 100%;
    left: 50%;
    margin-left: -5px;
    width: 0;
    border-top: 5px solid #000;
    border-top: 5px solid hsl(0, 0%, 20%);
    border-right: 5px solid transparent;
    border-left: 5px solid transparent;
    content: ' ';
    font-size: 0;
    line-height: 0;
  }

  /* Show tooltip content on hover */
  [data-tooltip]:hover:before,
  [data-tooltip]:hover:after {
    visibility: visible;
    -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=100)';
    filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=100);
    opacity: 1;
  }
</style>
